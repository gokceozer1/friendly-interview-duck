{"ast":null,"code":"var _jsxFileName = \"/Users/gozer/personal_projects/interview_dock/frontend/src/pages/Question.js\",\n    _s = $RefreshSig$();\n\nimport { useParams, Link } from 'react-router-dom';\nimport React, { useState, useEffect } from \"react\";\nimport QuestionService from \"../services/QuestionServices\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Question(props) {\n  _s();\n\n  var _question$articles;\n\n  const [question, setQuestion] = useState([]);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    retrieveQuestion();\n  }, []);\n\n  const retrieveQuestion = () => {\n    QuestionService.get(id).then(response => {\n      setQuestion(response.data[0]);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-rows-3 grid-flow-col gap-4 mt-4 px-10\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"shadow-lg bg-blue-100 text-blue-500 text-lg font-bold text-center p-10 rounded-lg row-span-3 col-span-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `todo-title mr-2`,\n          title: question.question,\n          style: {\n            textDecoration: 'none'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"break-after-column text-blue-900\",\n            children: [question.company + \" | \" + question.question, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 112\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 118\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"question-answer\",\n            children: question.answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), (_question$articles = question.articles) === null || _question$articles === void 0 ? void 0 : _question$articles.map((article, question_index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/articles/\" + article.id,\n            className: \"badge text-blue-700\",\n            style: {\n              textDecoration: 'none'\n            },\n            children: article.headline\n          }, question_index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this)\n        }, article.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this))]\n      }, question.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Question, \"3zkMF1lzk2OZCuo7TsnzuBKjqvw=\", false, function () {\n  return [useParams];\n});\n\n_c = Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["useParams","Link","React","useState","useEffect","QuestionService","Question","props","question","setQuestion","id","retrieveQuestion","get","then","response","data","catch","e","console","log","textDecoration","company","answer","articles","map","article","question_index","headline"],"sources":["/Users/gozer/personal_projects/interview_dock/frontend/src/pages/Question.js"],"sourcesContent":["import { useParams, Link } from 'react-router-dom';\nimport React, { useState, useEffect } from \"react\";\nimport QuestionService from \"../services/QuestionServices\";\n\nexport default function Question(props){\n    const [question, setQuestion] = useState([]);\n    const { id } = useParams();\n\n    useEffect(() => {\n        retrieveQuestion();\n      }, []);\n    \n    const retrieveQuestion = () => {\n    QuestionService.get(id)\n        .then(response => {\n        setQuestion(response.data[0]);\n        })\n        .catch(e => {\n        console.log(e);\n        });\n        \n    };\n\n    return(\n        <div>\n        <div className=\"grid grid-rows-3 grid-flow-col gap-4 mt-4 px-10\">\n\n            <div\n            key={question.id}\n            className=\"shadow-lg bg-blue-100 text-blue-500 text-lg font-bold text-center p-10 rounded-lg row-span-3 col-span-1\"                \n            >\n                \n            <div\n                className={`todo-title mr-2`}\n                title={question.question}                \n                style={{ textDecoration: 'none' }}\n            >\n                <h2 className=\"break-after-column text-blue-900\">{question.company + \" | \" + question.question}<br /><br /></h2>\n                <p className=\"question-answer\">{question.answer}</p>\n            </div>\n\n                {question.articles?.map((article, question_index) => (\n                <div key = {article.id}\n                className=\"list\"      >\n                    <Link\n                    to={\"/articles/\" + article.id}\n                    className=\"badge text-blue-700\"\n                    key={question_index}\n                    style={{ textDecoration: 'none' }}\n                    >\n                    {article.headline}\n                    </Link>\n                \n                </div>\n                ))}\n\n                </div>\n\n        </div>\n\n      </div>\n    )\n}"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,IAApB,QAAgC,kBAAhC;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,eAAP,MAA4B,8BAA5B;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;EAAA;;EAAA;;EACnC,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM;IAAEO;EAAF,IAASV,SAAS,EAAxB;EAEAI,SAAS,CAAC,MAAM;IACZO,gBAAgB;EACjB,CAFM,EAEJ,EAFI,CAAT;;EAIA,MAAMA,gBAAgB,GAAG,MAAM;IAC/BN,eAAe,CAACO,GAAhB,CAAoBF,EAApB,EACKG,IADL,CACUC,QAAQ,IAAI;MAClBL,WAAW,CAACK,QAAQ,CAACC,IAAT,CAAc,CAAd,CAAD,CAAX;IACC,CAHL,EAIKC,KAJL,CAIWC,CAAC,IAAI;MACZC,OAAO,CAACC,GAAR,CAAYF,CAAZ;IACC,CANL;EAQC,CATD;;EAWA,oBACI;IAAA,uBACA;MAAK,SAAS,EAAC,iDAAf;MAAA,uBAEI;QAEA,SAAS,EAAC,yGAFV;QAAA,wBAKA;UACI,SAAS,EAAG,iBADhB;UAEI,KAAK,EAAET,QAAQ,CAACA,QAFpB;UAGI,KAAK,EAAE;YAAEY,cAAc,EAAE;UAAlB,CAHX;UAAA,wBAKI;YAAI,SAAS,EAAC,kCAAd;YAAA,WAAkDZ,QAAQ,CAACa,OAAT,GAAmB,KAAnB,GAA2Bb,QAAQ,CAACA,QAAtF,eAA+F;cAAA;cAAA;cAAA;YAAA,QAA/F,eAAqG;cAAA;cAAA;cAAA;YAAA,QAArG;UAAA;YAAA;YAAA;YAAA;UAAA,QALJ,eAMI;YAAG,SAAS,EAAC,iBAAb;YAAA,UAAgCA,QAAQ,CAACc;UAAzC;YAAA;YAAA;YAAA;UAAA,QANJ;QAAA;UAAA;UAAA;UAAA;QAAA,QALA,wBAcKd,QAAQ,CAACe,QAdd,uDAcK,mBAAmBC,GAAnB,CAAuB,CAACC,OAAD,EAAUC,cAAV,kBACxB;UACA,SAAS,EAAC,MADV;UAAA,uBAEI,QAAC,IAAD;YACA,EAAE,EAAE,eAAeD,OAAO,CAACf,EAD3B;YAEA,SAAS,EAAC,qBAFV;YAIA,KAAK,EAAE;cAAEU,cAAc,EAAE;YAAlB,CAJP;YAAA,UAMCK,OAAO,CAACE;UANT,GAGKD,cAHL;YAAA;YAAA;YAAA;UAAA;QAFJ,GAAYD,OAAO,CAACf,EAApB;UAAA;UAAA;UAAA;QAAA,QADC,CAdL;MAAA,GACKF,QAAQ,CAACE,EADd;QAAA;QAAA;QAAA;MAAA;IAFJ;MAAA;MAAA;MAAA;IAAA;EADA;IAAA;IAAA;IAAA;EAAA,QADJ;AAuCH;;GA1DuBJ,Q;UAELN,S;;;KAFKM,Q"},"metadata":{},"sourceType":"module"}